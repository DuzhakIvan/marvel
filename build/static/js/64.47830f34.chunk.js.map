{"version":3,"file":"static/js/64.47830f34.chunk.js","mappings":"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","sources":["components/errorBoundary/ErrorBoundary.js","components/comicsList/comicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/spinner';\r\nimport \"./comicsList.scss\";\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\n\r\nconst ComicsList = (props) => {\r\n    const [offset, setOffset] = useState(0);\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(true);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n\r\n    const {loading, error, getAllComics} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\",onScroll);\r\n    }, []);\r\n\r\n    useEffect(()=> {\r\n        if (newItemLoading && !loading && !charEnded) {\r\n            onRequest(offset, true);\r\n        }\r\n\r\n        if(!charEnded) {\r\n            window.addEventListener(\"scroll\",onScroll);\r\n        } \r\n    }, [newItemLoading])\r\n\r\n    const onRequest = (offset, initial) => { // Добавляем дополнительный аргумент initial, чтобы знать первичная ли это загрузка\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true) // И проверяем первая загрузка? \r\n        \r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded)\r\n            .finally(() => setNewItemLoading(() => false))\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        setComicsList((comicsList) => [...comicsList, ...newComicsList]);\r\n        setOffset((offset) => offset + 8);\r\n        setCharEnded(newComicsList.length < 8 ? true : false);\r\n    }\r\n\r\n    const onScroll = () => {\r\n        if (window.innerHeight + window.pageYOffset + 50 >= document.body.offsetHeight) {\r\n            setNewItemLoading(true);\r\n            window.removeEventListener(\"scroll\",onScroll);\r\n        }\r\n    }\r\n\r\n    function renderItems(arr) {\r\n        const items = arr.map((item, i) => {\r\n            let imgStyle = { objectFit: \"cover\" };\r\n            if (\r\n                item.thumbnail ===\r\n                \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n            ) {\r\n                imgStyle = { objectFit: \"unset\" };\r\n            }\r\n\r\n\r\n            return (\r\n                <li className='comics__item' key={i} id={item.id}>\r\n                    <Link to={`./${item.id}`}>\r\n                        <img src={item.thumbnail} style={imgStyle} alt={item.title} />\r\n                        <span className='comics__item__title'>{item.title}</span>\r\n                        <span className=\"comics__item__price\">{item.price}</span>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return <ul className='comics__list'>{items}</ul>\r\n    } \r\n\r\n    const items = renderItems(comicsList);\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading && !newItemLoading  ? <Spinner /> : null;\r\n\r\n    return (\r\n        <div className='comics'>\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button\r\n                className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                onClick={() => onRequest(offset)}\r\n                style={{ display: charEnded ? \"none\" : \"block\" }}\r\n            >\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import AppBanner from \"../appBanner/appBanner\";\r\nimport ComicsList from \"../comicsList/comicsList\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nconst ComicsPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ErrorBoundary>\r\n                <ComicsList/>\r\n            </ErrorBoundary>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"names":["ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","error","_createClass","key","value","errorInfo","console","log","this","setState","_jsx","ErrorMessage","props","children","Component","_useState","useState","_useState2","_slicedToArray","offset","setOffset","_useState3","_useState4","comicsList","setComicsList","_useState5","_useState6","newItemLoading","setNewItemLoading","_useState7","_useState8","charEnded","setCharEnded","_useMarvelService","useMarvelService","loading","getAllComics","useEffect","window","addEventListener","onScroll","onRequest","initial","then","onComicsListLoaded","finally","newComicsList","_toConsumableArray","innerHeight","pageYOffset","document","body","offsetHeight","removeEventListener","items","arr","map","item","i","imgStyle","objectFit","thumbnail","className","id","_jsxs","Link","to","src","style","alt","title","price","renderItems","errorMessage","spinner","Spinner","disabled","onClick","display","_Fragment","AppBanner","ComicsList"],"sourceRoot":""}